package Queues;

public class Main {
    public static void main(String args[]) throws EmptyQueueException,FullQueueException
    {
        System.out.println("~~~~~~FIFO IMPLEMENTED ON 1 WAY LINKED LIST WITH HEAD~~~~~~\n\n\n");
        FIFO<Integer> K = new FIFO<>();
        System.out.println("Is empty: " + K.isEmpty());
        System.out.println("Enquequeing 3");
        K.enqueue(3);
        System.out.println("\nShowing FIFO: ");
        K.showFifo();
        System.out.println("\nEnqueueing 10->14->20");
        K.enqueue(10);
        K.enqueue(14);
        K.enqueue(20);
        System.out.println("\nShowing FIFO: ");
        K.showFifo();
        System.out.println("\nFirst in FIFO : " + K.first());
        System.out.println("\nDequeueing 1 element");
        K.dequeue();
        System.out.println("Is empty: " + K.isEmpty());
        System.out.println("Is full: " + K.isFull());
        System.out.println("Size: " + K.size());
        System.out.println("First: " + K.first());
        System.out.println("Dequeueing 2 elements");
        K.dequeue();
        K.dequeue();
        System.out.println("\nShowing FIFO: ");
        K.showFifo();
        System.out.println("\nEnqueueing 100");
        K.enqueue(100);
        System.out.println("\nShowing FIFO: ");
        K.showFifo();
        System.out.println("\nDequeueing 2 elements");
        K.dequeue();
        K.dequeue();
        System.out.println("\nShowing FIFO: ");
        K.showFifo();



        System.out.println("\n\n\n~~~~~~FIFO IMPLEMENTED ON ARRAY~~~~~~\n\n\n");
        System.out.println("");
        FIFOArray<Integer> Test = new FIFOArray<>(6);
        System.out.println("Is empty: " +Test.isEmpty());
        System.out.println("Is full: " +Test.isFull());
        System.out.println("Size of the queue: " + Test.size());
        System.out.println("Size of the buffor: " + Test.bufforsize());
        System.out.println("Enqueueing 10->15->20->25->30->35");
        Test.enqueue(10);
        Test.enqueue(15);
        Test.enqueue(20);
        Test.enqueue(25);
        Test.enqueue(30);
        Test.enqueue(35);
        System.out.println("\nShowing queue: ");
        Test.showQueue();
        System.out.println("First in FIFO: " + Test.first());
        System.out.println("Dequeueing 2 elements");
        Test.dequeue();
        Test.dequeue();
        System.out.println("\nShowing queue: ");
        Test.showQueue();
        System.out.println("Enqueueing 100");
        Test.enqueue(100);
        System.out.println("\nShowing queue: ");
        Test.showQueue();
        System.out.println("Enqueueing 200");
        Test.enqueue(200);
        System.out.println("Is empty: " +Test.isEmpty());
        System.out.println("Is full: " +Test.isFull());
        System.out.println("\nShowing queue: ");
        Test.showQueue();
        Test.enqueue(999);



        System.out.println("\n\n\n~~~~~~RING BUFFER~~~~~~\n\n\n");
        RingBuffer<Integer> test = new RingBuffer<>();
        System.out.println("Writing to a buffer: 10->5->100->50->40");
        test.writeBuffer(10);
        test.writeBuffer(5);
        test.writeBuffer(100);
        test.writeBuffer(50);
        test.writeBuffer(40);
        //test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 100 to a  buffer:");
        test.writeBuffer(100);
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 100 to a  buffer:");
        test.writeBuffer(100);
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 1234 to a  buffer:");
        test.writeBuffer(1234);
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 99 to a  buffer:");
        test.writeBuffer(99);
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 100 to a  buffer:");
        test.writeBuffer(100);
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 99 to a  buffer:");
        test.writeBuffer(99);
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("\nWriting 100 to a  buffer:");
        test.writeBuffer(100);
        System.out.println("\nShowing buffer:");
        test.showBuffer();
        System.out.println("Reading from a buffer");
        test.readBuffer();
        System.out.println("\nShowing buffer:");
        test.showBuffer();
    }
}
